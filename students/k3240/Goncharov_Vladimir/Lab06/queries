
1. Заполнение коллекции
 db.enrollee.insert({
  name: "Mr. Nekto",
  passport: {
  number: "4728572336",
  issueDate: "2016-02-02",
  issuedBy: "Some OUFMS"
  },
  school: {
  name: "School #777",
  city: "Moscow"
  },
  certificate: {
  math: "5",
  english: "5",
  history: "5"
  },
  silverMedal: "false",
  goldenMedal: "true",
  priveleged: "false",
  foundation: "commercial",
  programs: ["Political science"],
  faculties: ["Faculty of law"]
  })

db.enrollee.insert({)
  name: "Navalny Alexey",
  passport: {
  number: "1114232556",
  issueDate: "2016-02-02",
  issuedBy: "Some OUFMS"
  },
  school: {
  name: "School #777",
  city: "Moscow"
  },
  certificate: {
  math: "5",
  english: "5",
  history: "5"
  },
  silverMedal: "false",
  goldenMedal: "true",
  priveleged: "false",
  foundation: "commercial",
  programs: ["Political science"],
  faculties: ["Faculty of law"]
  }

db.enrollee.insert({
  name: "Putin Vladimir",
  passport: {
  number: "1114232556",
  issueDate: "2016-02-02",
  issuedBy: "Some OUFMS"
  },
  school: {
  name: "School #77",
  city: "Leningrad"
  },
  certificate: {
  math: "2",
  english: "2",
  history: "2"
  },
  silverMedal: "false",
  goldenMedal: "true",
  priveleged: "true",
  foundation: "budget",
  programs: ["Corruption"],
  faculties: ["Faculty of corruption"]
  })

db.enrollee.insert({
  name: "Lord Handsome",
  passport: {
  number: "1114232446",
  issueDate: "2017-02-02",
  issuedBy: "Some OUFMS"
  },
  school: {
  name: "School #77",
  city: "Moscow"
  },
  certificate: {
  math: "5",
  english: "5",
  history: "4"
  },
  silverMedal: "false",
  goldenMedal: "true",
  priveleged: "true",
  foundation: "budget",
  programs: ["Math"],
  faculties: ["Faculty of math"]
  })

db.enrollee.insert({
  name: "Lorem Ipsum",
  passport: {
  number: "1214232446",
  issueDate: "2018-02-02"
  issuedBy: "Some OUFMS"
  },
  school: {
  name: "School #45",
  city: "Grozny"
  },
  certificate: {
  math: "4",
  english: "5"
  },
  silverMedal: "false",
  goldenMedal: "true",
  priveleged: "false",
  foundation: "budget",
  programs: ["Computer Science", "Math"],
  faculties: ["Faculty of informatics", "Faculty of math"]
  }

2. Вывести имена абитуриентов и их пасопртные данные 
db.enrollee.find({}, {name: 1, passport: 1}).sort({"passport.number":-1})

3. Вывести имена всех абитуриентов и их пасопртные данные, кроме абитуриента с именем "Putin Vladimir" 
db.enrollee.find({name:{$ne:"Putin Vladimir"}}, {name: 1, passport: 1})

4. Вывести имена абитуриентов и данные об их школах
db.enrollee.find({}, {name: 1, school: 1})

5. Вывести выпускников каждой школы
db.enrollee.aggregate([{$group:{_id:"$school.name", graduates:{$push:"$name"}}}])

6. Вывести количество заявок на поступление для каждого факультета
db.enrollee.aggregate([{$unwind:"$faculties"}, {$group:{_id:"$faculties", count:{$sum:1}}}])

7. MapReduce

var map_function = function(){
	emit(this.school.name, this.certificate.math);
};

var reduce_function = function(name, math){
	return Array.sum(math);
};

db.enrollee.mapReduce(map_function, reduce_function, {out:"MapReduceRes"})

db.enrollee.mapReduce(map_function, reduce_function, {out:"MapReduceRes"})
{
        "result" : "MapReduceRes",
        "timeMillis" : 120,
        "counts" : {
                "input" : 5,
                "emit" : 5,
                "reduce" : 2,
                "output" : 3
        },
        "ok" : 1
}

 db.MapReduceRes.find({})
{ "_id" : "School #45", "value" : "4" }
{ "_id" : "School #77", "value" : "52" }
{ "_id" : "School #777", "value" : "55" }