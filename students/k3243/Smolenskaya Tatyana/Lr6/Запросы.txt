1) Показать код пациентов, дату и время приёма с определённым кодом доктора c сортировкой по дате приёма:

db.meet.find({id_doctor: ObjectId("5f06182c74258a37a8ce30ff")}, {date_meet: 1, _id: 0, id_patient: 1, time_meet:1}).sort({date_meet: 1})


2) Показать названия услуг, их стоимость, где она равна больше 1000 с сортировкой по стоимости услуг:

db.pricelist.find({price_service: {$gt: 1000}}, {_id: 0, name_service: 1, price_service: 1}).sort({price_service: 1})

3) Показать ФИО докторов с высшим образованием, их пол, специальность, стаж с сортировкой по стажу работы по убыванию:

db.doctor.find({education: "Высшее"}, {_id: 0, fio_doctor: 1, speciality: 1, gender: 1, work_time_in_clinic: 1}).sort({work_time_in_clinic: -1})

4) Показать коды пациентов, которых принимал доктор с определённым кодом доктора и у которых статус оплаты равен true:

db.meet.find({id_doctor: ObjectId("5f0720e674258a37a8ce310d"), payment_state: true}, {id_patient: 1, _id: 0})

5) Показать длину ФИО пациентов в символах:

db.patient.aggregate( [ { $project: { "fio_patient": 1, "length": { $strLenCP: "$fio_patient" } } } ] )

6) Агрегирование результатов с помощью MapReduce:

function map(){ emit(this.fio_patient, 1); }
function reduce(key, values) { var sum = 0; for(var i in values) { sum += values[i]; } return sum; }
db.patient.mapReduce(map, reduce,{out:"fio_patient"})

7) Показать ФИО пациентов и дату их рождения, если дата рождения меньше 1970-01-01:

db.patient.find({birthday_date_patient: {$lt: '1970-01-01'}}, {_id: 0, fio_patient: 1, birthday_date_patient: 1})

8) Показать ФИО врачей мужского пола со специальностью «Главный врач»:

db.doctor.find({speciality: "Главный врач", gender: "Мужской"}, {fio_doctor: 1, _id: 0})
